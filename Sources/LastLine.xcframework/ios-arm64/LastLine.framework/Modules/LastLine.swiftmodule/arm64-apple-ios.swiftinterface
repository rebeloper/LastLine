// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target arm64-apple-ios15.5 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name LastLine
import Combine
import Foundation
@_exported import LastLine
import Swift
import SwiftUI
import _Concurrency
public struct LastLineData : Swift.Codable {
  public let title: Swift.String
  public init(title: Swift.String? = nil)
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
@_Concurrency.MainActor(unsafe) public struct ContentView : SwiftUI.View {
  @SwiftUI.ObservedObject @_projectedValueProperty($lastLine) @_Concurrency.MainActor(unsafe) public var lastLine: LastLine.LastLine {
    get
    set
    _modify
  }
  @_Concurrency.MainActor(unsafe) public var $lastLine: SwiftUI.ObservedObject<LastLine.LastLine>.Wrapper {
    get
  }
  @_Concurrency.MainActor(unsafe) public init(lastLine: SwiftUI.ObservedObject<LastLine.LastLine>)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s8LastLine11ContentViewV4bodyQrvp", 0) __
}
public class LastLine : Combine.ObservableObject {
  @Combine.Published @_projectedValueProperty($licenseKey) public var licenseKey: Swift.String {
    get
    set
    _modify
  }
  public var $licenseKey: Combine.Published<Swift.String>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  public init(licenseKey: Swift.String? = nil)
  public typealias ObjectWillChangePublisher = Combine.ObservableObjectPublisher
  @objc deinit
}
