// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target arm64-apple-ios15.4-macabi -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name LastLine
import Foundation
@_exported import LastLine
import Swift
import SwiftUI
import _Concurrency
public struct LastLineData : Swift.Codable {
  public let title: Swift.String
  public init(title: Swift.String? = nil)
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
@_Concurrency.MainActor(unsafe) public struct ContentView : SwiftUI.View {
  @SwiftUI.StateObject @_projectedValueProperty($viewModel) @_Concurrency.MainActor(unsafe) public var viewModel: LastLine.ContentViewModel {
    get
  }
  @_Concurrency.MainActor(unsafe) public var $viewModel: SwiftUI.ObservedObject<LastLine.ContentViewModel>.Wrapper {
    get
  }
  @_Concurrency.MainActor(unsafe) public init()
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s8LastLine11ContentViewV4bodyQrvp", 0) __
}
@_hasMissingDesignatedInitializers public class ContentViewModel : Foundation.ObservableObject {
  public typealias ObjectWillChangePublisher = Combine.ObservableObjectPublisher
  @objc deinit
}
